



Doors (computing) - Wikipedia
































Doors (computing)

From Wikipedia, the free encyclopedia



Jump to navigation
Jump to search
This article is about an inter-process communication facility. For a requirements tracking tool by Rational, see DOORS.
The topic of this article may not meet Wikipedia's notability guidelines for products and services. Please help to demonstrate the notability of the topic by citing reliable secondary sources that are independent of the topic and provide significant coverage of it beyond a mere trivial mention. If notability cannot be shown, the article is likely to be merged, redirected, or deleted.Find sources: "Doors" computing – news · newspapers · books · scholar · JSTOR (August 2012) (Learn how and when to remove this template message)
This article needs additional citations for verification. Please help improve this article by adding citations to reliable sources. Unsourced material may be challenged and removed.Find sources: "Doors" computing – news · newspapers · books · scholar · JSTOR (July 2012) (Learn how and when to remove this template message)
Doors is an inter-process communication facility for Unix computer systems. They provide a form of procedure call.

Contents

1 History
2 Overview
3 See also
4 References
5 External links


History[edit]
Doors were developed by Sun Microsystems as a core part of the Spring operating system, then added to Solaris in version 2.5 as an undocumented internal interface.[1] They became a documented feature in Solaris 2.6. Recent versions of Solaris use Doors in many places, including nscd (the name service cache daemon) and syslog.
A Linux port of Doors was released in 2003, but is only available for version 2.4.18.[2]

Overview[edit]
The Doors subsystem is implemented as a user-space library with some kernel support, and relies heavily on threads. It is designed for low overhead, and the Solaris implementation uses some assembly code for maximum efficiency.
Doors are created by server processes (which must use threads) and called by client processes. It is possible for one process to both create and call a door. When creating a door, the server must specify a server procedure, which will be called by the Doors library on behalf of clients. Unlike most remote procedure call systems, each door has only one server procedure. A server can "attach" a door to a file, enabling clients to connect to that door simply by opening that file. The ls -l command will then show the file with a 'type' of "D" (not to be confused with "d" for a directory) — for example:
     Drw-r--r-- 1 jmorrison dev 876 Dec  8 19:43 myfile
Clients use door_call() to invoke the door's server procedure, passing a contiguous region of memory and a list of file descriptors as arguments, and getting back another contiguous region and list of file descriptors. Either region may be empty, as may either list. Usually, two C structs will be defined, one for the input data and one for the output data. (Alternatively, tagged unions may be used, allowing a door procedure to provide multiple actions in much the same way as the ioctl system call.) Every file descriptor is accompanied by a flags word. The DOOR_RELEASE flag requests that a file descriptor be closed in the sending process after being duplicated in the receiving process. If a file descriptor that refers to a door is sent, the system records the properties of that door in the flags word.
As well as representing a procedure, or a group of procedures, a door can represent a stateful data object, making it possible to pass references to such objects between processes. Such a door would typically take a tagged union as input data with each tag value denoting a different method.
The Doors system also provides a way for clients and servers to get information about each other. For example, a server can check the client's user or process ID to implement access control.
The Doors library normally creates and manages a pool of threads in the server process to handle calls, but it is possible to override this behavior. The Doors system does not provide any form of synchronization, but servers can use the normal thread-level synchronization primitives. Doors can be used to synchronize access to shared memory segments, allowing single-copy data transfer.[3]
The Doors concept is very similar to X/Open XATMI API specification, where client processes invoke server processes' exposed functions: door_call() is analogous to tpcall() in XATMI clients, while door_return() is analogous to tpreturn() in XATMI servers.

See also[edit]
Local Procedure Call
Enduro/X
Tuxedo
D-Bus
References[edit]


^ "dsvclockd(1M): Using Doors to Implement Inter-Process Readers/Writer Locks". meem simplex. June 14, 2005. Archived from the original on 2012-10-22. Retrieved 2012-03-20.

^ "Namefs and Solaris Doors for Linux".

^ [dead link]http://developers.sun.com/solaris/articles/fastSockets.html


External links[edit]
Solaris 10 man pages section 3: Realtime Library Functions (man pages for the door-related functions)
vteSolarisTechnologies
Direct binding
Doors
DTrace
IPMP
Jumpstart
mdb
MPxIO
SMF
snoop
Containers
Crossbow
Cluster
Trusted Extensions
ZFS
OpenSolaris, illumos
BeleniX
Nexenta OS
OpenIndiana
OpenSolaris for System z
SmartOS





Retrieved from "https://en.wikipedia.org/w/index.php?title=Doors_(computing)&oldid=1077820369"
Categories: Sun Microsystems softwareRemote procedure callHidden categories: All articles with dead external linksArticles with dead external links from February 2015Articles with topics of unclear notability from August 2012All articles with topics of unclear notabilityProducts articles with topics of unclear notabilityArticles needing additional references from July 2012All articles needing additional references






Navigation menu



Personal tools


Not logged inTalkContributionsCreate accountLog in





Namespaces


ArticleTalk





English









Views


ReadEditView history





More








Search



















Navigation


Main pageContentsCurrent eventsRandom articleAbout WikipediaContact usDonate




Contribute


HelpLearn to editCommunity portalRecent changesUpload file




Tools


What links hereRelated changesUpload fileSpecial pagesPermanent linkPage informationCite this pageWikidata item




Print/export


Download as PDFPrintable version




Languages


Norsk bokmålРусский
Edit links






 This page was last edited on 18 March 2022, at 10:06 (UTC).
Text is available under the Creative Commons Attribution-ShareAlike License 3.0;
additional terms may apply.  By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.


Privacy policy
About Wikipedia
Disclaimers
Contact Wikipedia
Mobile view
Developers
Statistics
Cookie statement










